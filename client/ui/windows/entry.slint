import { Palette } from "../palette.slint";
import { Button, Text, LineEdit, LoadingAnimation } from "../widgets.slint";

export enum Panel {
    login,
    register
}

component PanelView inherits VerticalLayout {
    in property <string> switch_text <=> switch.text;
    callback switch_clicked <=> switch_toucharea.clicked;

    width: 50%;
    padding: 15px;
    alignment: start;
    spacing: 7px;

    // main panel
    Rectangle {
        background: Palette.background2;
        vertical-stretch: 1;

        VerticalLayout {
            padding: 7px;
            padding-left: 20px;
            padding-right: 20px;
            spacing: 10px;

            @children
        }
    }

    // switch panel text
    HorizontalLayout {
        alignment: end;
        switch := Text {
            font-weight: 700;
            color: Palette.accent;

            switch_toucharea := TouchArea {
                mouse-cursor: pointer;
            }
        }
    }
}

component ErrorText inherits Text {
    color: Palette.error;
    horizontal-alignment: center;
    wrap: word-wrap;

    opacity: 0;
    animate opacity {
        duration: 200ms;
        easing: ease;
    }

    changed text => {
        self.opacity = self.text == "" ? 0 : 1;
    }
}

export component EntryWindow inherits Window {
    in property <string> build-info: "v0.0";
    
    out property <string> login_email <=> login_email.text;
    out property <string> login_password <=> login_password.text;
    out property <string> register_email <=> register_email.text;
    out property <string> register_username <=> register_username.text;
    out property <string> register_password <=> register_password.text;
    out property <string> register_password2 <=> register_password2.text;

    in-out property <bool> login_email_error <=> login_email.error;
    in-out property <bool> login_password_error <=> login_password.error;
    in-out property <bool> register_email_error <=> register_email.error;
    in-out property <bool> register_username_error <=> register_username.error;
    in-out property <bool> register_password_error <=> register_password.error;
    in-out property <bool> register_password2_error <=> register_password2.error;

    in-out property <string> login_error <=> login_error.text;
    in-out property <string> register_error <=> register_error.text;

    property <Panel> current_panel;

    title: "Salix";
    width: 400px;
    background: Palette.background1;

    callback login(username: string, password: string);
    callback register(email: string, username: string, password: string);

    public function set_loading(b: bool) {
        login_email.enabled = !b;
        login_password.enabled = !b;
        login_button.enabled = !b;

        register_email.enabled = !b;
        register_username.enabled = !b;
        register_password.enabled = !b;
        register_password2.enabled = !b;
        register_button.enabled = !b;

        loading.running = b;
        loading.opacity = b ? 1 : 0;
    }

    function unmark_errors() {
        login_email.error = false;
        login_password.error = false;
        register_email.error = false;
        register_username.error = false;
        register_password.error = false;
        register_password2.error = false;

        login_error.text = "";
        register_error.text = "";
    }

    function login_click() {
        unmark_errors();

        if login_email.text == "" {
            login_email.error = true;
            login_error.text = "enter the email";
            return;
        }
        if login_password.text == "" {
            login_password.error = true;
            login_error.text = "enter the password";
            return;
        }

        set_loading(true);

        login(login_email.text, login_password.text);
    }

    function register_click() {
        unmark_errors();
        
        if register_email.text == "" {
            register_email.error = true;
            register_error.text = "enter your email";
            return;
        }
        if register_username.text == "" {
            register_username.error = true;
            register_error.text = "enter a username";
            return;
        }
        if register_password.text == "" {
            register_password.error = true;
            register_error.text = "enter a password";
            return;
        }
        if register_password.text != register_password2.text {
            register_password2.error = true;
            register_error.text = "passwords must match";
            return;
        }

        set_loading(true);

        register(register_email.text, register_username.text, register_password.text)
    }

    VerticalLayout {
        Text {
            text: "salix";
            font-size: 50px;
            font-weight: 800;
            color: Palette.accent;
            horizontal-alignment: center;
            vertical-stretch: 0;
        }

        HorizontalLayout {
            x: current_panel == Panel.login ? 0px : -root.width;
            width: 2 * root.width;

            animate x {
                duration: 1s;
                easing: ease-out-expo;
            }

            PanelView {
                Text {
                    text: "Login";
                    horizontal-alignment: left;
                }
                login_email := LineEdit {
                    placeholder-text: "email";
                    init => { self.focus() }
                    accepted(text) => { login_button.clicked() }
                }
                login_password := LineEdit {
                    placeholder-text: "password";
                    input-type: password;
                    accepted(text) => { login_button.clicked() }
                }
                login_button := Button {
                    text: "login";

                    clicked => {
                        login_click();
                    }
                }
                login_error := ErrorText {}

                switch_text: "or register";
                switch_clicked => {
                    current_panel = Panel.register;
                }
            }

            PanelView {
                Text {
                    text: "New account";
                    horizontal-alignment: left;
                }
                register_email := LineEdit {
                    placeholder-text: "email";
                    accepted(text) => { register_button.clicked() }
                }
                register_username := LineEdit {
                    placeholder-text: "username";
                    accepted(text) => { register_button.clicked() }
                }
                register_password := LineEdit {
                    placeholder-text: "password";
                    input-type: password;
                    accepted(text) => { register_button.clicked() }
                }
                register_password2 := LineEdit {
                    placeholder-text: "password";
                    input-type: password;
                    accepted(text) => { register_button.clicked() }
                }
                register_button := Button {
                    text: "create";

                    clicked => {
                        register_click();
                    }
                }
                register_error := ErrorText {}

                switch_text: "or login";
                switch_clicked => {
                    current_panel = Panel.login;
                }
            }
        }

        loading := LoadingAnimation {
            size: 128px;
            running: false;
            opacity: 0;
            x: (root.width - self.size) / 2;

            animate opacity {
                duration: 1s;
                easing: ease;
            }
        }

        HorizontalLayout {
            padding-right: 15px;
            padding-bottom: 10px;
            alignment: end;

            Text {
                text: root.build-info;
                color: Palette.text2;
                horizontal-alignment: right;
            }
        }
    }
}
