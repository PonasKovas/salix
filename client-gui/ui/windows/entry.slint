import { Palette } from "../palette.slint";
import { Button, Text, LineEdit, LoadingAnimation, Footer } from "../widgets.slint";
import { LoginPanel } from "entry/login-panel.slint";
import { Register1Panel } from "entry/register1-panel.slint";
import { Register2Panel } from "entry/register2-panel.slint";
import { Register3Panel } from "entry/register3-panel.slint";

export component EntryWindow inherits Window {
    in-out property <bool> login_email_error <=> login_panel.email_error;
    in-out property <bool> login_password_error <=> login_panel.password_error;
    in-out property <string> login_error_message <=> login_panel.error_message;

    in-out property <bool> register1_email_error <=> register1_panel.email_error;
    in-out property <string> register1_error_message <=> register1_panel.error_message;

    in-out property <string> register2_error_message <=> register2_panel.error_message;

    in-out property <bool> register3_username_error <=> register3_panel.username_error;
    in-out property <bool> register3_password_error <=> register3_panel.password_error;
    in-out property <bool> register3_password2_error <=> register3_panel.password2_error;
    in-out property <string> register3_error_message <=> register3_panel.error_message;

    in-out property <int> current_panel;

    callback login(username: string, password: string);
    callback register1(email: string);
    callback register2(code: string);
    callback register3(username: string, password: string);

    public function set_loading(b: bool) {
        login_panel.enabled = !b;
        register1_panel.enabled = !b;
        register2_panel.enabled = !b;

        loading.running = b;
        loading.opacity = b ? 1 : 0;
    }

    title: "Salix";
    width: 400px;
    background: Palette.background1;

    VerticalLayout {
        Text {
            text: "salix";
            font-size: 50px;
            font-weight: 800;
            color: Palette.accent;
            horizontal-alignment: center;
            vertical-stretch: 0;
        }

        HorizontalLayout {
            x: -root.width * current_panel;
            width: 2 * root.width;

            animate x {
                duration: 1s;
                easing: ease-out-expo;
            }

            login_panel := LoginPanel {
                action => {
                    // clear previous errors
                    self.email_error = false;
                    self.password_error = false;
                    self.error_message = "";

                    if self.email == "" {
                        self.email_error = true;
                        self.error_message = "enter the email";
                        return;
                    }
                    if self.password == "" {
                        self.password_error = true;
                        self.error_message = "enter the password";
                        return;
                    }

                    set_loading(true);

                    login(self.email, self.password);
                }

                switch_text: "or register";
                switch_clicked => {
                    current_panel = 1;
                }
            }

            register1_panel := Register1Panel {
                action => {
                    // clear previous errors
                    self.email_error = false;
                    self.error_message = "";

                    if self.email == "" {
                        self.email_error = true;
                        self.error_message = "enter the email";
                        return;
                    }

                    // reset the code field in the next panel
                    register2_panel.code = "";

                    set_loading(true);

                    register1(self.email);
                }

                switch_text: "or login";
                switch_clicked => {
                    current_panel = 0;
                }
            }

            register2_panel := Register2Panel {
                action => {
                    // clear previous errors
                    self.error_message = "";

                    if self.code == "" {
                        self.error_message = "enter the code";
                        return;
                    }
                    if self.code.character-count != 4 {
                        self.error_message = "code must be 4-digit";
                        return;
                    }

                    set_loading(true);

                    register2(self.code);
                }

                switch_text: "go back";
                switch_clicked => {
                    current_panel = 1;
                }
            }

            register3_panel := Register3Panel {
                action => {
                    // clear previous errors
                    self.username_error = false;
                    self.password_error = false;
                    self.password2_error = false;
                    self.error_message = "";

                    if self.username == "" {
                        self.error_message = "choose a username";
                        self.username_error = true;
                        return;
                    }
                    if self.password == "" {
                        self.error_message = "choose a password";
                        self.password_error = true;
                        return;
                    }
                    if self.password != self.password2 {
                        self.error_message = "passwords must match";
                        self.password2_error = true;
                        return;
                    }

                    set_loading(true);

                    register3(self.username, self.password);
                }
            }
        }

        loading := LoadingAnimation {
            size: 128px;
            running: false;
            opacity: 0;
            x: (root.width - self.size) / 2;

            animate opacity {
                duration: 1s;
                easing: ease;
            }
        }

        Footer {}
    }
}
